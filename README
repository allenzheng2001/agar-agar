Current implementation:
(test1)
- player follows mouse
- food particles can be eaten
- smooth lerp to grow size 
- colors

(test2)
- expanding window size
- pause functionality (press p)
- auto-generation skeleton code
- generate and expand map "frames" instead of auto-expanding rectangle
- port over food spawning: auto-generate foods
- spawn one food elsewhere in the world per one that gets eaten
- speed up and shrink (hold f)

(test3)
- Player object that supports multiple blobs: around a center of mass.
- Binary Fission (space key): Split on an axis perpendicular to mouse vector (vel'koz q)
    - blobs can only split at a certain size (s.t. splitted blobs aren't smaller than initial)
    - split speed scales with size of the splitted blob
    - can only have a max number of children (8)
- multiple blobs: lerp to our center of mass -- it's constantly changing!
- convergence: vector from each blob to the mouse, scaled according to cosine to follow the CoM (not go off window)
    - converges after a time expiration, which increases based on total size for fairness
        - could be more smooth
        - fixed sec(x) oob
- reset functionality (press r)

- non-playing blobs can eat and get eaten


TODO (subject to change):
- non-playing blobs can move, they are NonPlayer objects instead of NonPlayerBlobs
    - varying radii
    - have their own behavior, fixed movement, random splitting/fasting?
    - self-updating
- game over screen (test4)

- add course hazards (test5)
    - breaker
    - mirror
    - black hole / E&M field (changes velocity O_O)
    - negative foods?
- add biomes (test6)?
    - textured water, forest, lava, etc.
    - index of refraction, viscosity, food density
    - adjacent frames should try to generate as the same type
- QoL: increase speed (done), safe mode. both decrease radius

FUTURE DIRECTIONS (after turn in)
- store "world" info on disk for very large worlds (single player)
- networking for multiplayer
- 3D?




